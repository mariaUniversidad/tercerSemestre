package principal;

import com.raven.event.EventTimePicker;
import java.sql.Connection;
import conexionSQL.ConexionDB;
import entidades.TbServicios;
import entidades.tbClientes;
import entidades.tbTipoPago;
import java.sql.PreparedStatement;
import listados.listadoClientes;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import listados.listadoServicios;
import java.util.Date;
import java.text.SimpleDateFormat;
import listados.listadoTipoPago;

/**
 *
 * @author Maluli
 */
public class menuPrincipal extends javax.swing.JFrame {

    ConexionDB conexionDB = null;
    listadoClientes listadoC = new listadoClientes();
    listadoServicios listadoS = new listadoServicios();
    listadoTipoPago listadoT = new listadoTipoPago();
    listadoServicios sumaDeServicios = new listadoServicios();
    String numeroAut = "000000126";
    String numeroNota = "0958159626001";
    double totalpaga = 0;
    double subtotalServicios = 0;
    double adicionalIva = 0;
    double TarifaIva = 0.12;

    /**
     * Creates new form menuPrincipal
     */
    public menuPrincipal() {
        initComponents();
        iniHourPopUp.addEventTimePicker(new EventTimePicker() {
            @Override
            public void timeSelected(String string) {
                System.out.println("hora inicial: " + string);
            }
        });

        finalHourPopUp.addEventTimePicker(new EventTimePicker() {
            @Override
            public void timeSelected(String string) {
                System.out.println("hora final: " + string);
            }
        });
        Date fechaActual = new Date();
        SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
        String fechaFormateada = formatoFecha.format(fechaActual);
        fechaEmision.setText(fechaFormateada);

        conexionDB = new ConexionDB();
        this.panelinicial.setVisible(true);
        this.reservas.setVisible(false);
        this.notasDeVenta.setVisible(false);
        this.clientes.setVisible(false);
        this.sorteos.setVisible(false);
        cargarComboClientes();
        cargarComboServicios();
        cargarComboTipoPago();
        JListadoServicios.clearSelection();
        comboBoxClientesReserv.setSelectedIndex(-1);
        tipoPago.setSelectedIndex(-1);
        JListadoServiciosNotadeVenta.clearSelection();
        comboBoxClientesNotaVenta.setSelectedIndex(-1);
        subtotal.setText("");
        subtotal.setText("");
        total.setText("");
        horaIni.setText("");
        horaFin.setText("");
        auth.setText(this.numeroAut);
        rucField.setText(this.numeroNota);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        iniHourPopUp = new com.raven.swing.TimePicker();
        finalHourPopUp = new com.raven.swing.TimePicker();
        panelinicial = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        notasDeVenta = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        rucField = new javax.swing.JTextField();
        tipoPago = new javax.swing.JComboBox<>();
        jLabel25 = new javax.swing.JLabel();
        fechaEmision = new javax.swing.JTextField();
        auth = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        comboBoxClientesNotaVenta = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JListadoServiciosNotadeVenta = new javax.swing.JList<>();
        jLabel31 = new javax.swing.JLabel();
        iva = new javax.swing.JTextField();
        total = new javax.swing.JTextField();
        subtotal = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        cancelarNotaVenta = new javax.swing.JButton();
        guardarNotaVenta = new javax.swing.JButton();
        background = new javax.swing.JLabel();
        reservas = new javax.swing.JPanel();
        fechaReserva = new com.toedter.calendar.JDateChooser();
        comboBoxClientesReserv = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        JListadoServicios = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        seleccionarHoraFinal = new javax.swing.JButton();
        seleccionarHoraInicial1 = new javax.swing.JButton();
        guardarReserva = new javax.swing.JButton();
        cancelarReserva = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        horaIni = new javax.swing.JTextField();
        horaFin = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        sorteos = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        fechaReserva1 = new com.toedter.calendar.JDateChooser();
        jTextField5 = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        cancelarNotaVenta1 = new javax.swing.JButton();
        guardarNotaVenta1 = new javax.swing.JButton();
        generarRandom = new javax.swing.JButton();
        fondosorteos = new javax.swing.JLabel();
        guardarNotaVenta2 = new javax.swing.JButton();
        clientes = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        guardacliente = new javax.swing.JButton();
        cancelarCliente = new javax.swing.JButton();
        fondoclientes = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        reservasMenu = new javax.swing.JMenu();
        reservasItem = new javax.swing.JMenuItem();
        notaDeVentaMenu = new javax.swing.JMenu();
        notaDeVentaItem = new javax.swing.JMenuItem();
        sorteosMenu = new javax.swing.JMenu();
        sorteosItem = new javax.swing.JMenuItem();
        clientesMenu = new javax.swing.JMenu();
        clientesItem = new javax.swing.JMenuItem();

        iniHourPopUp.setForeground(new java.awt.Color(58, 26, 100));
        iniHourPopUp.setDisplayText(horaIni);

        finalHourPopUp.setForeground(new java.awt.Color(58, 26, 100));
        finalHourPopUp.setDisplayText(horaFin);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelinicial.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 102));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursosVisuales/fondo1.png"))); // NOI18N
        jLabel1.setPreferredSize(null);
        panelinicial.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, 460));

        getContentPane().add(panelinicial, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, 420));

        notasDeVenta.setMaximumSize(new java.awt.Dimension(900, 636));
        notasDeVenta.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(112, 43, 248));
        jLabel10.setText("Total");
        notasDeVenta.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 300, -1, -1));

        jLabel21.setBackground(new java.awt.Color(255, 255, 255));
        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Nota de venta");
        notasDeVenta.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, -1, -1));

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Fecha de emisi√≥n");
        notasDeVenta.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 30, -1, -1));

        rucField.setEditable(false);
        rucField.setBackground(new java.awt.Color(224, 224, 255));
        notasDeVenta.add(rucField, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 100, 210, 30));

        notasDeVenta.add(tipoPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, 460, 30));

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Tipo de pago");
        notasDeVenta.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, -1));

        fechaEmision.setEditable(false);
        fechaEmision.setBackground(new java.awt.Color(224, 224, 255));
        notasDeVenta.add(fechaEmision, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 50, 210, 30));

        auth.setEditable(false);
        auth.setBackground(new java.awt.Color(224, 224, 255));
        notasDeVenta.add(auth, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 460, 30));

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Autorizaci√≥n sri");
        notasDeVenta.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, -1, -1));

        jLabel29.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Ruc");
        notasDeVenta.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 80, -1, -1));

        notasDeVenta.add(comboBoxClientesNotaVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 460, 30));

        jLabel30.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Cliente");
        notasDeVenta.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        JListadoServiciosNotadeVenta.setToolTipText("");
        jScrollPane2.setViewportView(JListadoServiciosNotadeVenta);

        notasDeVenta.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 360, 190));

        jLabel31.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(112, 43, 248));
        jLabel31.setText("Servicios");
        notasDeVenta.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, -1, -1));

        iva.setEditable(false);
        iva.setBackground(new java.awt.Color(224, 224, 255));
        notasDeVenta.add(iva, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 270, 280, 30));

        total.setEditable(false);
        total.setBackground(new java.awt.Color(224, 224, 255));
        notasDeVenta.add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 320, 280, 30));

        subtotal.setEditable(false);
        subtotal.setBackground(new java.awt.Color(224, 224, 255));
        notasDeVenta.add(subtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 220, 280, 30));

        jLabel32.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(112, 43, 248));
        jLabel32.setText("Subtotal");
        notasDeVenta.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, -1, -1));

        jLabel33.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(112, 43, 248));
        jLabel33.setText("Tarifa iva");
        notasDeVenta.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 250, -1, -1));

        cancelarNotaVenta.setBackground(new java.awt.Color(102, 102, 102));
        cancelarNotaVenta.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cancelarNotaVenta.setForeground(new java.awt.Color(255, 255, 255));
        cancelarNotaVenta.setText("Cancelar");
        cancelarNotaVenta.setToolTipText("");
        cancelarNotaVenta.setActionCommand("");
        cancelarNotaVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarNotaVentaActionPerformed(evt);
            }
        });
        notasDeVenta.add(cancelarNotaVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 370, 120, 40));

        guardarNotaVenta.setBackground(new java.awt.Color(112, 43, 248));
        guardarNotaVenta.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        guardarNotaVenta.setForeground(new java.awt.Color(255, 255, 255));
        guardarNotaVenta.setText("Guardar");
        guardarNotaVenta.setToolTipText("");
        guardarNotaVenta.setActionCommand("");
        guardarNotaVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarNotaVentaActionPerformed(evt);
            }
        });
        notasDeVenta.add(guardarNotaVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 370, 120, 40));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursosVisuales/fondonotadeventa.png"))); // NOI18N
        background.setText("nota de venta");
        notasDeVenta.add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(-60, -70, -1, -1));

        getContentPane().add(notasDeVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, 420));

        reservas.setBackground(new java.awt.Color(255, 255, 255));
        reservas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        reservas.add(fechaReserva, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 60, 290, 40));

        comboBoxClientesReserv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxClientesReservActionPerformed(evt);
            }
        });
        reservas.add(comboBoxClientesReserv, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 340, 40));

        jScrollPane1.setViewportView(JListadoServicios);

        reservas.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, 660, 120));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(112, 43, 248));
        jLabel2.setText("Detalles de reserva");
        reservas.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Fecha de reserva");
        reservas.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 40, -1, -1));

        seleccionarHoraFinal.setBackground(new java.awt.Color(58, 26, 100));
        seleccionarHoraFinal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        seleccionarHoraFinal.setForeground(new java.awt.Color(255, 255, 255));
        seleccionarHoraFinal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursosVisuales/hora.png"))); // NOI18N
        seleccionarHoraFinal.setToolTipText("");
        seleccionarHoraFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        seleccionarHoraFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarHoraFinalActionPerformed(evt);
            }
        });
        reservas.add(seleccionarHoraFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 130, 70, 40));

        seleccionarHoraInicial1.setBackground(new java.awt.Color(58, 26, 100));
        seleccionarHoraInicial1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        seleccionarHoraInicial1.setForeground(new java.awt.Color(255, 255, 255));
        seleccionarHoraInicial1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursosVisuales/hora.png"))); // NOI18N
        seleccionarHoraInicial1.setToolTipText("");
        seleccionarHoraInicial1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        seleccionarHoraInicial1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarHoraInicial1ActionPerformed(evt);
            }
        });
        reservas.add(seleccionarHoraInicial1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 130, 70, 40));

        guardarReserva.setBackground(new java.awt.Color(112, 43, 248));
        guardarReserva.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        guardarReserva.setForeground(new java.awt.Color(255, 255, 255));
        guardarReserva.setText("Guardar");
        guardarReserva.setToolTipText("");
        guardarReserva.setActionCommand("");
        guardarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarReservaActionPerformed(evt);
            }
        });
        reservas.add(guardarReserva, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 370, 120, 40));

        cancelarReserva.setBackground(new java.awt.Color(102, 102, 102));
        cancelarReserva.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cancelarReserva.setForeground(new java.awt.Color(255, 255, 255));
        cancelarReserva.setText("Cancelar");
        cancelarReserva.setToolTipText("");
        cancelarReserva.setActionCommand("");
        cancelarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarReservaActionPerformed(evt);
            }
        });
        reservas.add(cancelarReserva, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 370, 120, 40));

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Hora inicial de reserva");
        reservas.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, -1, -1));

        horaIni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horaIniActionPerformed(evt);
            }
        });
        reservas.add(horaIni, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, 260, 40));

        horaFin.setForeground(new java.awt.Color(102, 102, 102));
        horaFin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horaFinActionPerformed(evt);
            }
        });
        reservas.add(horaFin, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 130, 210, 40));

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Nombre del cliente");
        reservas.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, -1, -1));

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Hora final de la reserva");
        reservas.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 110, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Reserva");
        reservas.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursosVisuales/fondonotadeventa.png"))); // NOI18N
        jLabel5.setText("jLabel5");
        reservas.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(-60, 0, 840, 490));

        getContentPane().add(reservas, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, 420));

        sorteos.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel28.setBackground(new java.awt.Color(255, 255, 255));
        jLabel28.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Sorteos");
        sorteos.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, -1, -1));
        sorteos.add(fechaReserva1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, 540, 40));
        sorteos.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 370, 70));

        jLabel39.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("Fecha de expiraci√≥n");
        sorteos.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, -1, -1));

        jLabel38.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText("Clientes participantes");
        sorteos.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, -1, -1));

        cancelarNotaVenta1.setBackground(new java.awt.Color(102, 102, 102));
        cancelarNotaVenta1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cancelarNotaVenta1.setForeground(new java.awt.Color(255, 255, 255));
        cancelarNotaVenta1.setText("Cancelar");
        cancelarNotaVenta1.setToolTipText("");
        cancelarNotaVenta1.setActionCommand("");
        cancelarNotaVenta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarNotaVenta1ActionPerformed(evt);
            }
        });
        sorteos.add(cancelarNotaVenta1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 270, 140, 40));

        guardarNotaVenta1.setBackground(new java.awt.Color(47, 4, 133));
        guardarNotaVenta1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        guardarNotaVenta1.setForeground(new java.awt.Color(255, 255, 255));
        guardarNotaVenta1.setText("Generar ganador");
        guardarNotaVenta1.setToolTipText("");
        guardarNotaVenta1.setActionCommand("");
        guardarNotaVenta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarNotaVenta1ActionPerformed(evt);
            }
        });
        sorteos.add(guardarNotaVenta1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 90, 150, 70));

        generarRandom.setBackground(new java.awt.Color(112, 43, 248));
        generarRandom.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        generarRandom.setForeground(new java.awt.Color(255, 255, 255));
        generarRandom.setText("Guardar");
        generarRandom.setToolTipText("");
        generarRandom.setActionCommand("");
        generarRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarRandomActionPerformed(evt);
            }
        });
        sorteos.add(generarRandom, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 270, 140, 40));

        fondosorteos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursosVisuales/clientes.png"))); // NOI18N
        sorteos.add(fondosorteos, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 710, 440));

        guardarNotaVenta2.setBackground(new java.awt.Color(112, 43, 248));
        guardarNotaVenta2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        guardarNotaVenta2.setForeground(new java.awt.Color(255, 255, 255));
        guardarNotaVenta2.setText("Guardar");
        guardarNotaVenta2.setToolTipText("");
        guardarNotaVenta2.setActionCommand("");
        guardarNotaVenta2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarNotaVenta2ActionPerformed(evt);
            }
        });
        sorteos.add(guardarNotaVenta2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 280, 290, 40));

        getContentPane().add(sorteos, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, 420));

        clientes.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel27.setBackground(new java.awt.Color(255, 255, 255));
        jLabel27.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Ingreso de clientes");
        clientes.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, -1, -1));

        jLabel34.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Itentificaci√≥n");
        clientes.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, -1, -1));

        jLabel35.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Correo el√©ctronico");
        clientes.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 170, -1, -1));

        jLabel36.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("Tel√©fono");
        clientes.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 170, -1, -1));

        jLabel37.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Nombre completo");
        clientes.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, -1, -1));

        jTextField2.setText("jTextField1");
        clientes.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, 170, 40));

        jTextField3.setText("jTextField1");
        clientes.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 190, 170, 40));

        jTextField1.setText("jTextField1");
        clientes.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 190, 180, 40));
        clientes.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 540, 40));

        guardacliente.setBackground(new java.awt.Color(112, 43, 248));
        guardacliente.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        guardacliente.setForeground(new java.awt.Color(255, 255, 255));
        guardacliente.setText("Guardar");
        guardacliente.setToolTipText("");
        guardacliente.setActionCommand("");
        guardacliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardaclienteActionPerformed(evt);
            }
        });
        clientes.add(guardacliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 280, 120, 40));

        cancelarCliente.setBackground(new java.awt.Color(102, 102, 102));
        cancelarCliente.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cancelarCliente.setForeground(new java.awt.Color(255, 255, 255));
        cancelarCliente.setText("Cancelar");
        cancelarCliente.setToolTipText("");
        cancelarCliente.setActionCommand("");
        cancelarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarClienteActionPerformed(evt);
            }
        });
        clientes.add(cancelarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 280, 120, 40));

        fondoclientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursosVisuales/clientes.png"))); // NOI18N
        clientes.add(fondoclientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 710, 440));

        getContentPane().add(clientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, 420));

        jMenu1.setForeground(new java.awt.Color(112, 43, 248));
        jMenu1.setText("Men√∫ principal");
        jMenu1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jMenuItem1.setForeground(new java.awt.Color(204, 0, 102));
        jMenuItem1.setText("Ir al men√∫");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar2.add(jMenu1);

        reservasMenu.setForeground(new java.awt.Color(112, 43, 248));
        reservasMenu.setText("Reservas");
        reservasMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        reservasMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservasMenuActionPerformed(evt);
            }
        });

        reservasItem.setForeground(new java.awt.Color(204, 0, 102));
        reservasItem.setText("Realizar reserva");
        reservasItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservasItemActionPerformed(evt);
            }
        });
        reservasMenu.add(reservasItem);

        jMenuBar2.add(reservasMenu);

        notaDeVentaMenu.setForeground(new java.awt.Color(112, 43, 248));
        notaDeVentaMenu.setText("Notas de ventas");
        notaDeVentaMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        notaDeVentaItem.setForeground(new java.awt.Color(204, 0, 102));
        notaDeVentaItem.setText("Impresi√≥n de notas de ventas");
        notaDeVentaItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notaDeVentaItemActionPerformed(evt);
            }
        });
        notaDeVentaMenu.add(notaDeVentaItem);

        jMenuBar2.add(notaDeVentaMenu);

        sorteosMenu.setForeground(new java.awt.Color(112, 43, 248));
        sorteosMenu.setText("Sorteos");
        sorteosMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        sorteosItem.setForeground(new java.awt.Color(204, 0, 102));
        sorteosItem.setText("Reconocer sorteo");
        sorteosItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sorteosItemActionPerformed(evt);
            }
        });
        sorteosMenu.add(sorteosItem);

        jMenuBar2.add(sorteosMenu);

        clientesMenu.setForeground(new java.awt.Color(112, 43, 248));
        clientesMenu.setText("Clientes");
        clientesMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        clientesItem.setForeground(new java.awt.Color(204, 0, 102));
        clientesItem.setText("Ingresar clientes");
        clientesItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientesItemActionPerformed(evt);
            }
        });
        clientesMenu.add(clientesItem);

        jMenuBar2.add(clientesMenu);

        setJMenuBar(jMenuBar2);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reservasMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservasMenuActionPerformed

    }//GEN-LAST:event_reservasMenuActionPerformed

    private void sorteosItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sorteosItemActionPerformed
        this.panelinicial.setVisible(false);
        this.reservas.setVisible(false);
        this.notasDeVenta.setVisible(false);
        this.clientes.setVisible(false);
        this.sorteos.setVisible(true);
    }//GEN-LAST:event_sorteosItemActionPerformed

    private void reservasItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservasItemActionPerformed
        this.panelinicial.setVisible(false);
        this.reservas.setVisible(true);
        this.notasDeVenta.setVisible(false);
        this.clientes.setVisible(false);
        this.sorteos.setVisible(false);
    }//GEN-LAST:event_reservasItemActionPerformed

    private void notaDeVentaItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notaDeVentaItemActionPerformed
        this.panelinicial.setVisible(false);
        this.reservas.setVisible(false);
        this.notasDeVenta.setVisible(true);
        this.clientes.setVisible(false);
        this.sorteos.setVisible(false);
    }//GEN-LAST:event_notaDeVentaItemActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        this.panelinicial.setVisible(true);
        this.reservas.setVisible(false);
        this.notasDeVenta.setVisible(false);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void horaFinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horaFinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_horaFinActionPerformed

    private void horaIniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horaIniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_horaIniActionPerformed

    private void cancelarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarReservaActionPerformed
        this.panelinicial.setVisible(true);
        this.reservas.setVisible(false);
        this.notasDeVenta.setVisible(false);
        this.clientes.setVisible(false);
        this.sorteos.setVisible(false);

        JListadoServicios.clearSelection();
        comboBoxClientesReserv.setSelectedIndex(-1);
        fechaReserva.setDate(null);

    }//GEN-LAST:event_cancelarReservaActionPerformed

    private void guardarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarReservaActionPerformed
        /*TODO
        0. Validar Formulario
        1. guardar la informacion de la cabecera.
        2. Obtener el id de ese registro recien creado
        3. Guardar la informacion del detalle.
         */
 /*Validciones de formulario*/
        Date fechaActual = new Date();
        java.util.Date fechaReservacionUtil = fechaReserva.getDate();
        java.sql.Date fechaReservacionSql = new java.sql.Date(fechaReservacionUtil.getTime());
        SimpleDateFormat formatoFecha = new SimpleDateFormat("YYYY-MM-dd");
        String fechaFormateada = formatoFecha.format(fechaActual);
        System.out.println(fechaFormateada + " fecha vacia");
        if ((comboBoxClientesReserv.getSelectedIndex() < 0) && (JListadoServicios.getSelectedIndices().length <= 0) && fechaFormateada == null) {
            JOptionPane.showMessageDialog(null, "Debe ingresar todos los campos del formulario.", "Ingrese los datos correctamente", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (comboBoxClientesReserv.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(null, "Debe ingresar el nombre del cliente", "Ingrese los datos correctamente", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (JListadoServicios.getSelectedIndices().length <= 0) {
            JOptionPane.showMessageDialog(null, "Debe ingresar el/los servicios para la reserva", "Ingrese los datos correctamente", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (java.sql.Date.valueOf(fechaFormateada) == null) {
            JOptionPane.showMessageDialog(null, "Debe ingresar fecha de reservaci√≥n.", "Ingrese los datos correctamente", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (fechaReservacionSql.compareTo(java.sql.Date.valueOf(fechaFormateada)) < 0) {
            JOptionPane.showMessageDialog(null, "La fecha de reservaci√≥n debe ser mayor o igual a la fecha actual.", "Ingrese los datos correctamente", JOptionPane.ERROR_MESSAGE);
            return;
        }
        /*fin Validciones de formulario*/
        String queryDB = "Insert into tb_reservas (fecha_reserva,fk_id_cliente,hora_inicio,hora_fin) "
                + "values (?,?,?,?);";

        tbClientes clienteSeleccionado = listadoC.obtenerClienteByPosicion(comboBoxClientesReserv.getSelectedIndex());
        System.out.println(clienteSeleccionado.getIdCliente());

        Long idCabeceraReservacion = null;

        try (Connection conn = conexionDB.obtenerConexion(); PreparedStatement ps = conn.prepareStatement(queryDB, PreparedStatement.RETURN_GENERATED_KEYS)) {

            ps.setDate(1, fechaReservacionSql);
            ps.setLong(2, clienteSeleccionado.getIdCliente());
            ps.setString(3, iniHourPopUp.getSelectedTime());
            ps.setString(4, finalHourPopUp.getSelectedTime());

            ps.executeUpdate();

            try (ResultSet obtenerAnteriorKey = ps.getGeneratedKeys()) {
                if (obtenerAnteriorKey.next()) {
                    idCabeceraReservacion = obtenerAnteriorKey.getLong(1);

                    System.out.println("ID Autogenerado:  " + idCabeceraReservacion);
                }
            }

            System.out.println("Cabecera insertada con exito" + " Fecha: " + fechaReservacionSql);
        } catch (Exception e) {
            System.out.println("Cabecera no pudo ser insertada" + e);
        }

        System.out.println(JListadoServicios.getSelectedIndices());

        String queryServicios = "Insert into tb_reservasDetalle (fk_id_servicio,fk_id_reservas) "
                + " values (?,?);";

        try (Connection conn = conexionDB.obtenerConexion(); PreparedStatement ps = conn.prepareStatement(queryServicios)) {

            for (int i = 0; i < JListadoServicios.getSelectedIndices().length; i++) {
                TbServicios obtenerServiciosByPosicion = listadoS.obtenerServiciosByPosicion(JListadoServicios.getSelectedIndices()[i]);
                ps.setLong(1, idCabeceraReservacion);
                ps.setLong(2, obtenerServiciosByPosicion.getIdServicios());
                ps.execute();
            }

            JListadoServicios.clearSelection();
            comboBoxClientesReserv.setSelectedIndex(-1);
            fechaReserva.setDate(null);

            JOptionPane.showMessageDialog(null, "Reserva guardada exitosamente.", "Proceso exitoso", JOptionPane.INFORMATION_MESSAGE);
            System.out.println("Insercion de detalle exitoso");
        } catch (Exception e) {
            System.err.println("Error registrando detalle: " + e);
        }

    }//GEN-LAST:event_guardarReservaActionPerformed

    private void comboBoxClientesReservActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxClientesReservActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxClientesReservActionPerformed

    private void seleccionarHoraFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarHoraFinalActionPerformed
        finalHourPopUp.showPopup(this, 150, 150);
    }//GEN-LAST:event_seleccionarHoraFinalActionPerformed

    private void seleccionarHoraInicial1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarHoraInicial1ActionPerformed
        iniHourPopUp.showPopup(this, 150, 150);
    }//GEN-LAST:event_seleccionarHoraInicial1ActionPerformed

    private void cancelarNotaVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarNotaVentaActionPerformed
        this.panelinicial.setVisible(true);
        this.reservas.setVisible(false);
        this.notasDeVenta.setVisible(false);
        this.clientes.setVisible(false);
        this.sorteos.setVisible(false);
    }//GEN-LAST:event_cancelarNotaVentaActionPerformed

    private void clientesItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientesItemActionPerformed
        this.panelinicial.setVisible(false);
        this.reservas.setVisible(false);
        this.notasDeVenta.setVisible(false);
        this.clientes.setVisible(true);
        this.sorteos.setVisible(false);
    }//GEN-LAST:event_clientesItemActionPerformed

    private void guardarNotaVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarNotaVentaActionPerformed
        Date fechaActual = new Date();
        java.util.Date fechaReservacionUtil = fechaActual;
        java.sql.Date fechaReservacionSql = new java.sql.Date(fechaReservacionUtil.getTime());

        for (int i = 0; i < JListadoServiciosNotadeVenta.getSelectedIndices().length; i++) {
            TbServicios obtenerServiciosByPosicion = listadoS.obtenerServiciosByPosicion(JListadoServiciosNotadeVenta.getSelectedIndices()[i]);
            this.subtotalServicios += obtenerServiciosByPosicion.getCosto_servicio();
            System.out.println("subtotal de todos los servicios: " + this.subtotalServicios);
        }

        this.adicionalIva = this.subtotalServicios * this.TarifaIva;
        this.totalpaga = this.subtotalServicios + adicionalIva;

        subtotal.setText(Double.toString(this.subtotalServicios));
        total.setText(Double.toString(this.totalpaga));
        iva.setText("12%");
        rucField.setText(this.numeroNota);

        String queryDB = "Insert into tb_facturaCabecera (fk_id_cliente,fk_id_tipoPago,ruc,fecha_emision,sri_Auth,iva,subtotal,total)"
                + "values(?,?,?,?,?,?,?,?) ";
        tbClientes clienteSeleccionado = listadoC.obtenerClienteByPosicion(comboBoxClientesNotaVenta.getSelectedIndex());
        tbTipoPago tipoPagoSeleccionado = listadoT.obtenerTipoPagoByPosition(tipoPago.getSelectedIndex());
        long idCabeceraNotadeVenta = 0;

        try (Connection conn = conexionDB.obtenerConexion(); PreparedStatement ps = conn.prepareStatement(queryDB, PreparedStatement.RETURN_GENERATED_KEYS)) {
            System.out.println("tipo de pago selecionado por id: " + tipoPagoSeleccionado.getIdTipoPago());
            ps.setLong(1, clienteSeleccionado.getIdCliente());
            ps.setInt(2, tipoPagoSeleccionado.getIdTipoPago());
            ps.setString(3, this.numeroNota);
            ps.setDate(4, fechaReservacionSql);
            ps.setString(5, this.numeroAut);
            ps.setDouble(6, this.TarifaIva);
            ps.setDouble(7, this.subtotalServicios);
            ps.setDouble(8, this.totalpaga);
            ps.execute();

            try (ResultSet obtenerAnteriorKey = ps.getGeneratedKeys()) {
                if (obtenerAnteriorKey.next()) {
                    idCabeceraNotadeVenta = obtenerAnteriorKey.getLong(1);
                    System.out.println("ID Autogenerado:  " + idCabeceraNotadeVenta);
                }
            }
            System.out.println("Insercion de cabecera de factura exitosa");

        } catch (Exception ex) {
            System.out.println("problemas con la insercion de la cabecera de la factura: " + ex);
        }

        //insercion de detalle de nota de venta
        String queryServicios = "Insert into tb_facturasDetalle (fk_id_facturaCabecera, fk_id_servicios) "
                + " values (?,?);";
        try (Connection conn = conexionDB.obtenerConexion(); PreparedStatement ps = conn.prepareStatement(queryServicios)) {

            for (int i = 0; i < JListadoServiciosNotadeVenta.getSelectedIndices().length; i++) {
                TbServicios obtenerServiciosByPosicion = listadoS.obtenerServiciosByPosicion(JListadoServiciosNotadeVenta.getSelectedIndices()[i]);
                ps.setLong(1, idCabeceraNotadeVenta);
                ps.setLong(2, obtenerServiciosByPosicion.getIdServicios());
                this.subtotalServicios += obtenerServiciosByPosicion.getCosto_servicio();
                ps.execute();
            }
            JListadoServiciosNotadeVenta.clearSelection();
            comboBoxClientesNotaVenta.setSelectedIndex(-1);

            Object[] options = {"OK"};
            int result = JOptionPane.showOptionDialog(null, "Nota de venta guardada exitosamente", "Proceso exitoso", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
            System.out.println("Insercion de detalle exitoso");
            if (result == JOptionPane.OK_OPTION) {
                tipoPago.setSelectedIndex(-1);
                JListadoServiciosNotadeVenta.clearSelection();
                comboBoxClientesNotaVenta.setSelectedIndex(-1);
                subtotal.setText("");
                subtotal.setText("");
                total.setText("");
                System.out.println("OK seleccionado");
            }

        } catch (Exception e) {
            System.err.println("Error registrando detalle: " + e);
        }

    }//GEN-LAST:event_guardarNotaVentaActionPerformed

    private void guardaclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardaclienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guardaclienteActionPerformed

    private void cancelarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarClienteActionPerformed
        this.panelinicial.setVisible(true);
        this.reservas.setVisible(false);
        this.notasDeVenta.setVisible(false);
        this.clientes.setVisible(false);
        this.sorteos.setVisible(false);
    }//GEN-LAST:event_cancelarClienteActionPerformed

    private void cancelarNotaVenta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarNotaVenta1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelarNotaVenta1ActionPerformed

    private void guardarNotaVenta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarNotaVenta1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guardarNotaVenta1ActionPerformed

    private void guardarNotaVenta2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarNotaVenta2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guardarNotaVenta2ActionPerformed

    private void generarRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarRandomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_generarRandomActionPerformed

    private void cargarComboClientes() {
        String queryDB = "SELECT idCliente, primer_nombre, identificacion, correo, telefono "
                + "from tb_cliente";
        try (Connection conn = conexionDB.obtenerConexion(); PreparedStatement ps = conn.prepareStatement(queryDB)) {
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                tbClientes clientes = new tbClientes(rs.getLong(1),
                        rs.getString(2), rs.getString(3), rs.getString(4),
                        rs.getString(5));
                listadoC.agregarClientes(clientes);
                comboBoxClientesReserv.addItem(clientes.getPrimer_nombre());
                comboBoxClientesNotaVenta.addItem(clientes.getPrimer_nombre());
            }

        } catch (Exception e) {
            System.err.println("conexion fallida: " + e);
        }
    }

    private void cargarComboServicios() {
        String queryDB = "SELECT idServicios, nombre_servicio, costo_servicio "
                + "from tb_servicios";
        try (Connection conn = conexionDB.obtenerConexion(); PreparedStatement ps = conn.prepareStatement(queryDB)) {
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                TbServicios servicios = new TbServicios(rs.getLong(1),
                        rs.getString(2), rs.getDouble(3));
                listadoS.agregarServicios(servicios);

            }

        } catch (Exception e) {
            System.err.println("conexion fallida: " + e);
        }
        JListadoServicios.setListData(listadoS.getListaNombresServicios());
        JListadoServiciosNotadeVenta.setListData(listadoS.getListaNombresServicios());
    }

    private void cargarComboTipoPago() {
        String queryDB = "SELECT idTipoPago, tipo_pago "
                + "from tb_tipoPago";
        try (Connection conn = conexionDB.obtenerConexion(); PreparedStatement ps = conn.prepareStatement(queryDB)) {
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                tbTipoPago tipoPagos = new tbTipoPago(rs.getInt(1), rs.getString(2));
                listadoT.agregarTipoPago(tipoPagos);
                tipoPago.addItem(tipoPagos.getTipo_pago());
            }

        } catch (Exception e) {
            System.err.println("conexion fallida: " + e);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menuPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> JListadoServicios;
    private javax.swing.JList<String> JListadoServiciosNotadeVenta;
    private javax.swing.JTextField auth;
    private javax.swing.JLabel background;
    private javax.swing.JButton cancelarCliente;
    private javax.swing.JButton cancelarNotaVenta;
    private javax.swing.JButton cancelarNotaVenta1;
    private javax.swing.JButton cancelarReserva;
    private javax.swing.JPanel clientes;
    private javax.swing.JMenuItem clientesItem;
    private javax.swing.JMenu clientesMenu;
    private javax.swing.JComboBox<String> comboBoxClientesNotaVenta;
    private javax.swing.JComboBox<String> comboBoxClientesReserv;
    private javax.swing.JTextField fechaEmision;
    private com.toedter.calendar.JDateChooser fechaReserva;
    private com.toedter.calendar.JDateChooser fechaReserva1;
    private com.raven.swing.TimePicker finalHourPopUp;
    private javax.swing.JLabel fondoclientes;
    private javax.swing.JLabel fondosorteos;
    private javax.swing.JButton generarRandom;
    private javax.swing.JButton guardacliente;
    private javax.swing.JButton guardarNotaVenta;
    private javax.swing.JButton guardarNotaVenta1;
    private javax.swing.JButton guardarNotaVenta2;
    private javax.swing.JButton guardarReserva;
    private javax.swing.JTextField horaFin;
    private javax.swing.JTextField horaIni;
    private com.raven.swing.TimePicker iniHourPopUp;
    private javax.swing.JTextField iva;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JMenuItem notaDeVentaItem;
    private javax.swing.JMenu notaDeVentaMenu;
    private javax.swing.JPanel notasDeVenta;
    private javax.swing.JPanel panelinicial;
    private javax.swing.JPanel reservas;
    private javax.swing.JMenuItem reservasItem;
    private javax.swing.JMenu reservasMenu;
    private javax.swing.JTextField rucField;
    private javax.swing.JButton seleccionarHoraFinal;
    private javax.swing.JButton seleccionarHoraInicial1;
    private javax.swing.JPanel sorteos;
    private javax.swing.JMenuItem sorteosItem;
    private javax.swing.JMenu sorteosMenu;
    private javax.swing.JTextField subtotal;
    private javax.swing.JComboBox<String> tipoPago;
    private javax.swing.JTextField total;
    // End of variables declaration//GEN-END:variables

}
